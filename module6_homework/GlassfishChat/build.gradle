group 'chat'
version '1.0'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    //compile group: 'org.glassfish.extras', name: 'glassfish-embedded-all', version: '3.1.1'
    //compile group: 'javax', name: 'javaee-api', version: '7.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    compile group: 'javax.servlet', name: 'servlet-api', version: '2.5'

    compile group: 'org.glassfish.websocket', name: 'websocket-api', version: '0.2'

    compile group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'
    compile group: 'javax.websocket', name: 'javax.websocket-client-api', version: '1.1'

    //compile group: 'org.springframework', name: 'spring-context', version: '4.3.10.RELEASE'
    //compile group: 'org.springframework', name: 'spring-webmvc', version: '4.3.10.RELEASE'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// Override Gradle defaults - a force an exploded JAR view
/*
sourceSets {
    main {
        output.resourcesDir = 'build/classes/main'
        output.classesDir = 'build/classes/main'
    }
    test {
        output.resourcesDir = 'build/classes/test'
        output.classesDir = 'build/classes/test'
    }
}

task(run, dependsOn: 'classes', type: JavaExec) {
    description = 'Runs the main application'
    main = 'com.epam.mentoring.chat.MainApplication'
    classpath = sourceSets.main.runtimeClasspath
}
*/

/**
 *  ~/.gradle/gradle.properties:
 *  glassfishHome=/path/to/glassfish_home
 *
 *  or in Netbeans, right click project, Properties, Manage Build in Tasks, Run
 *  Add line to Arguments: -Dorg.gradle.project.glassfishHome=/path/to/glassfish_home
 *
 *  For more information about Exec tasks see
 *  http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.Exec.html
 */
/*
task run(dependsOn: 'war', type:Exec) {
    workingDir "${glassfishHome}${File.separator}bin"

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
        commandLine "./asadmin"
    }

    args "deploy", "--force=true", "${war.archivePath}"
}
 */